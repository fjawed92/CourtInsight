{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}{\f43\fbidi \fswiss\fcharset0\fprq2 Aptos;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2 Aptos Display;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2 Aptos;}
{\fbiminor\f31507\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}{\f45\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f46\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f48\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f49\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f50\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f51\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f52\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f53\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f55\fbidi \fswiss\fcharset238\fprq2 Arial CE;}{\f56\fbidi \fswiss\fcharset204\fprq2 Arial Cyr;}
{\f58\fbidi \fswiss\fcharset161\fprq2 Arial Greek;}{\f59\fbidi \fswiss\fcharset162\fprq2 Arial Tur;}{\f60\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f61\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f62\fbidi \fswiss\fcharset186\fprq2 Arial Baltic;}{\f63\fbidi \fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f385\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}{\f386\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}
{\f388\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f389\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f392\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}{\f393\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}
{\f475\fbidi \fswiss\fcharset238\fprq2 Aptos CE;}{\f476\fbidi \fswiss\fcharset204\fprq2 Aptos Cyr;}{\f478\fbidi \fswiss\fcharset161\fprq2 Aptos Greek;}{\f479\fbidi \fswiss\fcharset162\fprq2 Aptos Tur;}{\f482\fbidi \fswiss\fcharset186\fprq2 Aptos Baltic;}
{\f483\fbidi \fswiss\fcharset163\fprq2 Aptos (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Aptos Display CE;}
{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Aptos Display Cyr;}{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Aptos Display Greek;}{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Aptos Display Tur;}
{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Aptos Display Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Aptos Display (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Aptos CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Aptos Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Aptos Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Aptos Tur;}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Aptos Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Aptos (Vietnamese);}{\fbiminor\f31578\fbidi \fswiss\fcharset238\fprq2 Arial CE;}{\fbiminor\f31579\fbidi \fswiss\fcharset204\fprq2 Arial Cyr;}{\fbiminor\f31581\fbidi \fswiss\fcharset161\fprq2 Arial Greek;}
{\fbiminor\f31582\fbidi \fswiss\fcharset162\fprq2 Arial Tur;}{\fbiminor\f31583\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\fbiminor\f31584\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}
{\fbiminor\f31585\fbidi \fswiss\fcharset186\fprq2 Arial Baltic;}{\fbiminor\f31586\fbidi \fswiss\fcharset163\fprq2 Arial (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;
\red0\green0\blue0;\red0\green0\blue0;}{\*\defchp \fs24\kerning2\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa160\sl278\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{
\ql \li0\ri0\sa160\sl278\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs24\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe1033\kerning2\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl278\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\kerning2\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 
\snext11 \ssemihidden \sunhideused Normal Table;}}{\*\rsidtbl \rsid482778\rsid8196752\rsid11150132}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info
{\operator Fahad Jawed}{\creatim\yr2024\mo9\dy11\hr22\min4}{\revtim\yr2024\mo9\dy11\hr22\min4}{\version2}{\edmins0}{\nofpages38}{\nofwords5785}{\nofchars32979}{\nofcharsws38687}{\vern103}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003
/wordml}}\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot11150132 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl2\pnucltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnqc\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\sa160\sl278\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11150132 \rtlch\fcs1 
\af31507\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\kerning2\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid11150132 \hich\af31506\dbch\af31505\loch\f31506 
from flask import render_template, flash, redirect, url_for, request, jsonify, session
\par \hich\af31506\dbch\af31505\loch\f31506 from app import app, db
\par \hich\af31506\dbch\af31505\loch\f31506 from app.forms import LoginForm, RegistrationForm, TeamForm, AddPlayerForm, UpdatePlayerForm, CreateGameForm, CreateTeamForm
\par \hich\af31506\dbch\af31505\loch\f31506 from app.models import User, Team, Player, Game, GameLog, BoxScore, Season, League
\par \hich\af31506\dbch\af31505\loch\f31506 from flask_login import current_user, login_user, logout_user, login_required
\par \hich\af31506\dbch\af31505\loch\f31506 from urllib.parse import urlparse
\par \hich\af31506\dbch\af31505\loch\f31506 from sqlalchemy.exc import SQLAlchemyError
\par \hich\af31506\dbch\af31505\loch\f31506 from sqlalchemy import func, desc
\par \hich\af31506\dbch\af31505\loch\f31506 from datetime import datetime, date
\par \hich\af31506\dbch\af31505\loch\f31506 from functools import wraps
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 def league_required(f):
\par \hich\af31506\dbch\af31505\loch\f31506     @wraps(f)
\par \hich\af31506\dbch\af31505\loch\f31506     def decorated_function(*args, **kwargs):
\par \hich\af31506\dbch\af31505\loch\f31506         if 'selected_league_id' not in session:
\par \hich\af31506\dbch\af31505\loch\f31506             flash('Please select a league to continue.', 'warning')
\par \hich\af31506\dbch\af31505\loch\f31506             return redirect(url_for('index'))  # Redirect to the homepage to select a league
\par \hich\af31506\dbch\af31505\loch\f31506         return f(*args, **kwargs)
\par \hich\af31506\dbch\af31505\loch\f31506     return decorated_function
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/')
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 def index():
\par \hich\af31506\dbch\af31505\loch\f31506     leagues = League.query.all()  # Fetch all available leagues from the database
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Check if a league has already been selected in the session
\par \hich\af31506\dbch\af31505\loch\f31506     selected_league_id = session.get('selected_league_id')
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if selected_league_id:
\par \hich\af31506\dbch\af31505\loch\f31506         # If a league is selected in the session, redirect to the league dashboard
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('league_dashboard', league_id=selected_league_id))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # If no league is selected, show the homepage with the league selection
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('index.html', leagues=leagues)
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/select_league/<int:league_id>', methods=['GET'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 def select_league(league_id):
\par \hich\af31506\dbch\af31505\loch\f31506     # Store the selected league in the session
\par \hich\af31506\dbch\af31505\loch\f31506     session['selected_league_id'] = league_id
\par \hich\af31506\dbch\af31505\loch\f31506     session.modified = True  # Explicitly mark the session as modified
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Redirect to the league dashboard
\par \hich\af31506\dbch\af31505\loch\f31506     return redirect(url_for('league_dashboard', league_id=league_id))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/league_dashboard/<int:league_id>')
\par \hich\af31506\dbch\af31505\loch\f31506 def league_dashboard(league_id):
\par \hich\af31506\dbch\af31505\loch\f31506     # Get the league by ID
\par \hich\af31506\dbch\af31505\loch\f31506     league = League.query.get_or_404(league_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch all seasons associated with the league
\par \hich\af31506\dbch\af31505\loch\f31506     seasons = Season.query.filter_by(league_id=league_id).order_by(Season.start_date.desc()).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Determine the selected season; if none is provided, select the latest season
\par \hich\af31506\dbch\af31505\loch\f31506     selected_season_id = request.args.get('season_id', None)
\par \hich\af31506\dbch\af31505\loch\f31506     if not selected_season_id and seasons:
\par \hich\af31506\dbch\af31505\loch\f31506         selected_season_id = seasons[0].id  # Default to the latest season if not specified
\par \hich\af31506\dbch\af31505\loch\f31506     else:
\par \hich\af31506\dbch\af31505\loch\f31506         selected_season_id = int(selected_season_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch games for the selected season and league
\par \hich\af31506\dbch\af31505\loch\f31506     games_query = Game.query.filter_by(season_id=selected_season_id, league_id=league_id).order_by(Game.game_date.desc())
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Last game played
\par \hich\af31506\dbch\af31505\loch\f31506     last_game = games_query.first()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     mvp = None
\par \hich\af31506\dbch\af31505\loch\f31506     if last_game:
\par \hich\af31506\dbch\af31505\loch\f31506         mvp = db.session.query(
\par \hich\af31506\dbch\af31505\loch\f31506             Player.firstName, Player.lastName, Team.teamName, func.sum(BoxScore.points).label('total_points')
\par \hich\af31506\dbch\af31505\loch\f31506         ).select_from(BoxScore).join(Player, BoxScore.player_id == Player.playerID).join(Team, BoxScore.team_id == Team.teamID).filter(
\par \hich\af31506\dbch\af31505\loch\f31506             BoxScore.game_id == last_game.game_id
\par \hich\af31506\dbch\af31505\loch\f31506         ).group_by(Player.playerID, Team.teamID).order_by(desc('total_points')).first()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate team standings
\par \hich\af31506\dbch\af31505\loch\f31506     teams = Team.query.filter_by(league_id=league_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team_standings = []
\par \hich\af31506\dbch\af31505\loch\f31506     for team in teams:
\par \hich\af31506\dbch\af31505\loch\f31506         wins = games_query.filter(
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_1_id == team.teamID) & (Game.team_1_score > Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_2_id == team.teamID) & (Game.team_2_score > Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506         ).count()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         losses = games_query.filter(
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_1_id == team.teamID) & (Game.team_1_score < Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_2_id == team.teamID) & (Game.team_2_score < Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506         ).count()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         team_standings.append(\{
\par \hich\af31506\dbch\af31505\loch\f31506             'teamName': team.teamName,
\par \hich\af31506\dbch\af31505\loch\f31506             'wins': wins,
\par \hich\af31506\dbch\af31505\loch\f31506             'losses': losses
\par \hich\af31506\dbch\af31505\loch\f31506         \})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Sort team standings by number of wins and assign ranking
\par \hich\af31506\dbch\af31505\loch\f31506     team_standings = sorted(team_standings, key=lambda x: x['wins'], reverse=True)
\par \hich\af31506\dbch\af31505\loch\f31506     for index, team in enumerate(team_standings):
\par \hich\af31506\dbch\af31505\loch\f31506         team['rank'] = index + 1
\par 
\par \hich\af31506\dbch\af31505\loch\f31506    # Fetch the top 5 scoring leaders for the selected season and league, including FG%
\par \hich\af31506\dbch\af31505\loch\f31506     top_scorers = db.session.query(
\par \hich\af31506\dbch\af31505\loch\f31506         Player.firstName, Player.lastName, Team.teamName,
\par \hich\af31506\dbch\af31505\loch\f31506         func.sum(BoxScore.points).label('total_points'),
\par \hich\af31506\dbch\af31505\loch\f31506         (func.sum(BoxScore.fgm) / func.sum(BoxScore.fga) * 100).label('fg_percentage')
\par \hich\af31506\dbch\af31505\loch\f31506     ).select_from(BoxScore) \\
\par \hich\af31506\dbch\af31505\loch\f31506      .join(Player, BoxScore.player_id == Player.playerID) \\
\par \hich\af31506\dbch\af31505\loch\f31506      .join(Team, BoxScore.team_id == Team.teamID) \\
\par \hich\af31506\dbch\af31505\loch\f31506      .filter(
\par \hich\af31506\dbch\af31505\loch\f31506         BoxScore.season_id == selected_season_id,
\par \hich\af31506\dbch\af31505\loch\f31506         BoxScore.league_id == league_id,
\par \hich\af31506\dbch\af31505\loch\f31506         BoxScore.fga > 0  # Exclude players with zero field goal attempts
\par \hich\af31506\dbch\af31505\loch\f31506     ).group_by(Player.playerID, Team.teamID) \\
\par \hich\af31506\dbch\af31505\loch\f31506      .order_by(desc('total_points')).limit(5).all()
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch upcoming games for the selected season
\par \hich\af31506\dbch\af31505\loch\f31506     upcoming_games = games_query.filter(Game.game_date >= datetime.now()).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template(
\par \hich\af31506\dbch\af31505\loch\f31506         'league_dashboard.html',
\par \hich\af31506\dbch\af31505\loch\f31506         league=league,
\par \hich\af31506\dbch\af31505\loch\f31506         seasons=seasons,
\par \hich\af31506\dbch\af31505\loch\f31506         selected_season_id=selected_season_id,
\par \hich\af31506\dbch\af31505\loch\f31506         last_game=last_game,
\par \hich\af31506\dbch\af31505\loch\f31506         team_standings=team_standings,
\par \hich\af31506\dbch\af31505\loch\f31506         upcoming_games=upcoming_games,
\par \hich\af31506\dbch\af31505\loch\f31506         top_scorers=top_scorers,
\par \hich\af31506\dbch\af31505\loch\f31506         mvp=mvp
\par \hich\af31506\dbch\af31505\loch\f31506     )
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/login', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 def login():
\par \hich\af31506\dbch\af31505\loch\f31506     if current_user.is_authenticated:
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('index'))
\par \hich\af31506\dbch\af31505\loch\f31506     form = LoginForm()
\par \hich\af31506\dbch\af31505\loch\f31506     if form.validate_on_submit():
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Login attempt for username: \{form.username.data\}")
\par \hich\af31506\dbch\af31505\loch\f31506         user = User.query.filter_by(username=form.username.data).first()
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"User object fetched from DB: \{user\}")
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         if user is None:
\par \hich\af31506\dbch\af31505\loch\f31506             flash('Invalid username or password')
\par \hich\af31506\dbch\af31505\loch\f31506             return redirect(url_for('login'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Provided password: \{form.password.data\}")
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Stored password hash: \{user.password_hash\}")
\par \hich\af31506\dbch\af31505\loch\f31506         password_check = user.check_password(form.password.data)
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Password check result: \{password_check\}")
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         if not password_check:
\par \hich\af31506\dbch\af31505\loch\f31506             flash('Invalid username or password')
\par \hich\af31506\dbch\af31505\loch\f31506             return redirect(url_for('login'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         login_user(user, remember=form.remember_me.data)
\par \hich\af31506\dbch\af31505\loch\f31506         next_page = request.args.get('next')
\par \hich\af31506\dbch\af31505\loch\f31506         if not next_page or urlparse(next_page).netloc != '':
\par \hich\af31506\dbch\af31505\loch\f31506             next_page = url_for('index')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(next_page)
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('login.html', title='Sign In', form=form)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/logout')
\par \hich\af31506\dbch\af31505\loch\f31506 def logout():
\par \hich\af31506\dbch\af31505\loch\f31506     logout_user()
\par \hich\af31506\dbch\af31505\loch\f31506     return redirect(url_for('index'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/register', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 def register():
\par \hich\af31506\dbch\af31505\loch\f31506     if current_user.is_authenticated:
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('index'))
\par \hich\af31506\dbch\af31505\loch\f31506     form = RegistrationForm()
\par \hich\af31506\dbch\af31505\loch\f31506     if form.validate_on_submit():
\par \hich\af31506\dbch\af31505\loch\f31506         user = User(username=form.username.data, email=form.email.data)
\par \hich\af31506\dbch\af31505\loch\f31506         user.set_password(form.password.data)
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Registering user: \{user.username\} with email: \{user.email\}")
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Password: \{form.password.data\}")
\par \hich\af31506\dbch\af31505\loch\f31506         print(f"Password hash: \{user.password_hash\}")
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.add(user)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par \hich\af31506\dbch\af31505\loch\f31506         print(f'Registered user: \{user.username\}, \{user.email\}')
\par \hich\af31506\dbch\af31505\loch\f31506         flash('Congratulations, you are now a registered user!')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('login'))
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('register.html', title='Register', form=form)
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/add_team', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def add_team():
\par \hich\af31506\dbch\af31505\loch\f31506     form = TeamForm()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch all available leagues
\par \hich\af31506\dbch\af31505\loch\f31506     leagues = League.query.all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Add league choices to the form dynamically
\par \hich\af31506\dbch\af31505\loch\f31506     form.league_id.choices = [(league.id, league.name) for league in leagues]
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if form.validate_on_submit():
\par \hich\af31506\dbch\af31505\loch\f31506         team = Team(
\par \hich\af31506\dbch\af31505\loch\f31506             teamName=form.teamName.data,
\par \hich\af31506\dbch\af31505\loch\f31506             teamDivision=form.teamDivision.data,
\par \hich\af31506\dbch\af31505\loch\f31506             teamCaptain=form.teamCaptain.data,
\par \hich\af31506\dbch\af31505\loch\f31506             contactnumber=form.contactnumber.data,
\par \hich\af31506\dbch\af31505\loch\f31506             contactemail=form.contactemail.data,
\par \hich\af31506\dbch\af31505\loch\f31506             league_id=form.league_id.data  # Save selected league
\par \hich\af31506\dbch\af31505\loch\f31506         )
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.add(team)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par \hich\af31506\dbch\af31505\loch\f31506         flash('Team added successfully!')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('index'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('add_team.html', title='Add Team', form=form)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/teams')
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def teams():
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the current league from the session
\par \hich\af31506\dbch\af31505\loch\f31506     current_league_id = session.get('selected_league_id')
\par \hich\af31506\dbch\af31505\loch\f31506     latest_season = Season.query.filter_by(league_id=current_league_id).order_by(Season.start_date.desc()).first()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if not latest_season:
\par \hich\af31506\dbch\af31505\loch\f31506         flash("No seasons found for the current league.", "warning")
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('index'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch all teams for the current league
\par \hich\af31506\dbch\af31505\loch\f31506     teams = Team.query.filter_by(league_id=current_league_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Query all games for the current league and season
\par \hich\af31506\dbch\af31505\loch\f31506     games_query = Game.query.filter_by(season_id=latest_season.id, league_id=current_league_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate wins and losses for each team
\par \hich\af31506\dbch\af31505\loch\f31506     team_stats = []
\par \hich\af31506\dbch\af31505\loch\f31506     for team in teams:
\par \hich\af31506\dbch\af31505\loch\f31506         wins = games_query.filter(
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_1_id == team.teamID) & (Game.team_1_score > Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_2_id == team.teamID) & (Game.team_2_score > Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506         ).count()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         losses = games_query.filter(
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_1_id == team.teamID) & (Game.team_1_score < Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_2_id == team.teamID) & (Game.team_2_score < Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506         ).count()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         team_stats.append(\{
\par \hich\af31506\dbch\af31505\loch\f31506             'team': team,
\par \hich\af31506\dbch\af31505\loch\f31506             'wins': wins,
\par \hich\af31506\dbch\af31505\loch\f31506             'losses': losses
\par \hich\af31506\dbch\af31505\loch\f31506         \})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Sort the teams by their wins, and then by losses
\par \hich\af31506\dbch\af31505\loch\f31506     team_stats.sort(key=lambda x: (-x['wins'], x['losses']))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('teams.html', team_stats=team_stats, latest_season=latest_season)
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/team_details/<int:team_id>')
\par \hich\af31506\dbch\af31505\loch\f31506 def team_details(team_id):
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the team by ID
\par \hich\af31506\dbch\af31505\loch\f31506     team = Team.query.get_or_404(team_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the current league and latest season
\par \hich\af31506\dbch\af31505\loch\f31506     current_league_id = session.get('selected_league_id')
\par \hich\af31506\dbch\af31505\loch\f31506     latest_season = Season.query.filter_by(league_id=current_league_id).order_by(Season.start_date.desc()).first()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate the team's current season record and rank
\par \hich\af31506\dbch\af31505\loch\f31506     total_wins = Game.query.filter_by(season_id=latest_season.id).filter(
\par \hich\af31506\dbch\af31505\loch\f31506         ((Game.team_1_id == team_id) & (Game.team_1_score > Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506         ((Game.team_2_id == team_id) & (Game.team_2_score > Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506     ).count()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     total_losses = Game.query.filter_by(season_id=latest_season.id).filter(
\par \hich\af31506\dbch\af31505\loch\f31506         ((Game.team_1_id == team_id) & (Game.team_1_score < Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506         ((Game.team_2_id == team_id) & (Game.team_2_score < Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506     ).count()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     current_record = f"\{total_wins\} - \{total_losses\}"
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch all teams for ranking calculation
\par \hich\af31506\dbch\af31505\loch\f31506     teams_in_league = Team.query.filter_by(league_id=current_league_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team_standings = []
\par \hich\af31506\dbch\af31505\loch\f31506     for t in teams_in_league:
\par \hich\af31506\dbch\af31505\loch\f31506         wins = Game.query.filter_by(season_id=latest_season.id).filter(
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_1_id == t.teamID) & (Game.team_1_score > Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_2_id == t.teamID) & (Game.team_2_score > Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506         ).count()
\par \hich\af31506\dbch\af31505\loch\f31506         losses = Game.query.filter_by(season_id=latest_season.id).filter(
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_1_id == t.teamID) & (Game.team_1_score < Game.team_2_score)) |
\par \hich\af31506\dbch\af31505\loch\f31506             ((Game.team_2_id == t.teamID) & (Game.team_2_score < Game.team_1_score))
\par \hich\af31506\dbch\af31505\loch\f31506         ).count()
\par \hich\af31506\dbch\af31505\loch\f31506         team_standings.append(\{'team': t, 'wins': wins, 'losses': losses\})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Sort standings by wins (descending) and set rank
\par \hich\af31506\dbch\af31505\loch\f31506     team_standings.sort(key=lambda x: (-x['wins'], x['losses']))
\par \hich\af31506\dbch\af31505\loch\f31506     current_rank = next((index + 1 for index, standing in enumerate(team_standings) if standing['team'].teamID == team_id), None)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the last 3 games played by the team in the current season
\par \hich\af31506\dbch\af31505\loch\f31506     last_3_games = Game.query.filter_by(season_id=latest_season.id).filter(
\par \hich\af31506\dbch\af31505\loch\f31506         (Game.team_1_id == team_id) | (Game.team_2_id == team_id)
\par \hich\af31506\dbch\af31505\loch\f31506     ).order_by(Game.game_date.desc()).limit(3).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Prepare data for the chart
\par \hich\af31506\dbch\af31505\loch\f31506     game_dates = [game.game_date.strftime('%Y-%m-%d') for game in last_3_games]
\par \hich\af31506\dbch\af31505\loch\f31506     points = []
\par \hich\af31506\dbch\af31505\loch\f31506     fg_percentages = []
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate total points and FG% for each of the last three games
\par \hich\af31506\dbch\af31505\loch\f31506     for game in last_3_games:
\par \hich\af31506\dbch\af31505\loch\f31506         if game.team_1_id == team_id:
\par \hich\af31506\dbch\af31505\loch\f31506             total_points = game.team_1_score
\par \hich\af31506\dbch\af31505\loch\f31506         else:
\par \hich\af31506\dbch\af31505\loch\f31506             total_points = game.team_2_score
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Sum the field goals made and attempted for the team in each game
\par \hich\af31506\dbch\af31505\loch\f31506         fgm = db.session.query(func.sum(BoxScore.fgm)).filter_by(game_id=game.game_id, team_id=team_id).scalar() or 0
\par \hich\af31506\dbch\af31505\loch\f31506         fga = db.session.query(func.sum(BoxScore.fga)).filter_by(game_id=game.game_id, team_id=team_id).scalar() or 0
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         points.append(total_points)
\par \hich\af31506\dbch\af31505\loch\f31506         fg_percentages.append((fgm / fga) * 100 if fga > 0 else 0)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch all box scores for the team in the current season
\par \hich\af31506\dbch\af31505\loch\f31506     box_scores = BoxScore.query.filter_by(team_id=team_id, season_id=latest_season.id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate average stats per player for the current season
\par \hich\af31506\dbch\af31505\loch\f31506     players = Player.query.filter_by(teamID=team_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     player_stats = []
\par \hich\af31506\dbch\af31505\loch\f31506     for player in players:
\par \hich\af31506\dbch\af31505\loch\f31506         # Fetch all box scores for the player
\par \hich\af31506\dbch\af31505\loch\f31506         player_box_scores = BoxScore.query.filter_by(player_id=player.playerID, season_id=latest_season.id).all()
\par \hich\af31506\dbch\af31505\loch\f31506         total_games = len(player_box_scores)
\par \hich\af31506\dbch\af31505\loch\f31506         if total_games > 0:
\par \hich\af31506\dbch\af31505\loch\f31506             avg_points = sum(bs.points for bs in player_box_scores) / total_games
\par \hich\af31506\dbch\af31505\loch\f31506             total_fgm = sum(bs.fgm for bs in player_box_scores)
\par \hich\af31506\dbch\af31505\loch\f31506             total_fga = sum(bs.fga for bs in player_box_scores)
\par \hich\af31506\dbch\af31505\loch\f31506             fg_percentage = (total_fgm / total_fga) * 100 if total_fga > 0 else 0
\par \hich\af31506\dbch\af31505\loch\f31506             player_stats.append(\{
\par \hich\af31506\dbch\af31505\loch\f31506                 'firstName': player.firstName,
\par \hich\af31506\dbch\af31505\loch\f31506                 'lastName': player.lastName,
\par \hich\af31506\dbch\af31505\loch\f31506                 'jersey_number': player.jerseyNumber,
\par \hich\af31506\dbch\af31505\loch\f31506                 'avg_points': avg_points,
\par \hich\af31506\dbch\af31505\loch\f31506                 'fg_percentage': fg_percentage
\par \hich\af31506\dbch\af31505\loch\f31506             \})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch games played by the team in the current season
\par \hich\af31506\dbch\af31505\loch\f31506     games = Game.query.filter_by(season_id=latest_season.id).filter(
\par \hich\af31506\dbch\af31505\loch\f31506         (Game.team_1_id == team_id) | (Game.team_2_id == team_id)
\par \hich\af31506\dbch\af31505\loch\f31506     ).order_by(Game.game_date.desc()).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Prepare game history data
\par \hich\af31506\dbch\af31505\loch\f31506     games_history = []
\par \hich\af31506\dbch\af31505\loch\f31506     for game in games:
\par \hich\af31506\dbch\af31505\loch\f31506         if game.team_1_id == team_id:
\par \hich\af31506\dbch\af31505\loch\f31506             opponent = game.team2.teamName
\par \hich\af31506\dbch\af31505\loch\f31506             team_score = game.team_1_score
\par \hich\af31506\dbch\af31505\loch\f31506             opponent_score = game.team_2_score
\par \hich\af31506\dbch\af31505\loch\f31506         else:
\par \hich\af31506\dbch\af31505\loch\f31506             opponent = game.team1.teamName
\par \hich\af31506\dbch\af31505\loch\f31506             team_score = game.team_2_score
\par \hich\af31506\dbch\af31505\loch\f31506             opponent_score = game.team_1_score
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         result = 'Win' if team_score > opponent_score else 'Loss'
\par \hich\af31506\dbch\af31505\loch\f31506         games_history.append(\{
\par \hich\af31506\dbch\af31505\loch\f31506             'date_played': game.game_date.strftime('%Y-%m-%d'),
\par \hich\af31506\dbch\af31505\loch\f31506             'opponent': opponent,
\par \hich\af31506\dbch\af31505\loch\f31506             'team_score': team_score,
\par \hich\af31506\dbch\af31505\loch\f31506             'opponent_score': opponent_score,
\par \hich\af31506\dbch\af31505\loch\f31506             'result': result,
\par \hich\af31506\dbch\af31505\loch\f31506             'game_id': game.game_id  # Include the game_id for linking
\par \hich\af31506\dbch\af31505\loch\f31506         \})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 
    return render_template('team_details.html', team=team, box_scores=box_scores, game_dates=game_dates, points=points, fg_percentages=fg_percentages, player_stats=player_stats, latest_season=latest_season, games_history=games_history, current_record=curr
\hich\af31506\dbch\af31505\loch\f31506 ent_record, current_rank=current_rank)
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/players')
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def players():
\par \hich\af31506\dbch\af31505\loch\f31506     all_players = Player.query.all()  # Fetch all players from the database
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('players.html', players=all_players)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/add_player', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def add_player():
\par \hich\af31506\dbch\af31505\loch\f31506     form = AddPlayerForm()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Populate the teamID choices dynamically
\par \hich\af31506\dbch\af31505\loch\f31506     form.teamID.choices = [('', 'Select a Team')] + [(team.teamID, team.teamName) for team in Team.query.all()]
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if form.validate_on_submit():
\par \hich\af31506\dbch\af31505\loch\f31506         player = Player(
\par \hich\af31506\dbch\af31505\loch\f31506             firstName=form.firstName.data,
\par \hich\af31506\dbch\af31505\loch\f31506             lastName=form.lastName.data,
\par \hich\af31506\dbch\af31505\loch\f31506             jerseyNumber = form.jerseyNumber.data,
\par \hich\af31506\dbch\af31505\loch\f31506             age=form.age.data,
\par \hich\af31506\dbch\af31505\loch\f31506             phoneNumber=form.phoneNumber.data,
\par \hich\af31506\dbch\af31505\loch\f31506             email=form.email.data,
\par \hich\af31506\dbch\af31505\loch\f31506             position=form.position.data,
\par \hich\af31506\dbch\af31505\loch\f31506             weight=form.weight.data,
\par \hich\af31506\dbch\af31505\loch\f31506             height=form.height.data,
\par \hich\af31506\dbch\af31505\loch\f31506             countryOfOrigin=form.countryOfOrigin.data,
\par \hich\af31506\dbch\af31505\loch\f31506             teamID=int(form.teamID.data) if form.teamID.data else None
\par \hich\af31506\dbch\af31505\loch\f31506         )
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.add(player)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par \hich\af31506\dbch\af31505\loch\f31506         flash('Player added successfully!', 'success')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('players'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('add_player.html', form=form)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/update_player/<int:player_id>', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def update_player(player_id):
\par \hich\af31506\dbch\af31505\loch\f31506     player = Player.query.get_or_404(player_id)
\par \hich\af31506\dbch\af31505\loch\f31506     form = UpdatePlayerForm()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Populate the teamID choices dynamically
\par \hich\af31506\dbch\af31505\loch\f31506     form.teamID.choices = [('', 'Select a Team')] + [(str(team.teamID), team.teamName) for team in Team.query.all()]
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if form.validate_on_submit():
\par \hich\af31506\dbch\af31505\loch\f31506         try:
\par \hich\af31506\dbch\af31505\loch\f31506             player.firstName = form.firstName.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.lastName = form.lastName.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.age = form.age.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.phoneNumber = form.phoneNumber.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.email = form.email.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.position = form.position.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.weight = form.weight.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.height = form.height.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.countryOfOrigin = form.countryOfOrigin.data
\par \hich\af31506\dbch\af31505\loch\f31506             player.teamID = int(form.teamID.data) if form.teamID.data else None
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             print(f"Updating Player: \{player.firstName\}, \{player.lastName\}, \{player.age\}, \{player.phoneNumber\}, \{player.email\}, \{player.position\}, \{player.weight\}, \{player.height\}, \{
player.countryOfOrigin\}, \{player.teamID\}")
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             db.session.commit()
\par \hich\af31506\dbch\af31505\loch\f31506             flash('Player updated successfully!', 'success')
\par \hich\af31506\dbch\af31505\loch\f31506             return redirect(url_for('players'))
\par \hich\af31506\dbch\af31505\loch\f31506         except SQLAlchemyError as e:
\par \hich\af31506\dbch\af31505\loch\f31506             db.session.rollback()
\par \hich\af31506\dbch\af31505\loch\f31506             flash(f'Error updating player: \{str(e)\}', 'danger')
\par \hich\af31506\dbch\af31505\loch\f31506     elif request.method == 'GET':
\par \hich\af31506\dbch\af31505\loch\f31506         form.firstName.data = player.firstName
\par \hich\af31506\dbch\af31505\loch\f31506         form.lastName.data = player.lastName
\par \hich\af31506\dbch\af31505\loch\f31506         form.age.data = player.age
\par \hich\af31506\dbch\af31505\loch\f31506         form.phoneNumber.data = player.phoneNumber
\par \hich\af31506\dbch\af31505\loch\f31506         form.email.data = player.email
\par \hich\af31506\dbch\af31505\loch\f31506         form.position.data = player.position
\par \hich\af31506\dbch\af31505\loch\f31506         form.weight.data = player.weight
\par \hich\af31506\dbch\af31505\loch\f31506         form.height.data = player.height
\par \hich\af31506\dbch\af31505\loch\f31506         form.countryOfOrigin.data = player.countryOfOrigin
\par \hich\af31506\dbch\af31505\loch\f31506         form.teamID.data = str(player.teamID) if player.teamID else ''
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('update_players.html', form=form, player=player)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/quick_upload', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def quick_upload():
\par \hich\af31506\dbch\af31505\loch\f31506     form = CreateTeamForm()  # Instantiate the form
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if request.method == 'POST':
\par \hich\af31506\dbch\af31505\loch\f31506         team_name = form.teamName.data
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Check if the team name is provided
\par \hich\af31506\dbch\af31505\loch\f31506         if not team_name:
\par \hich\af31506\dbch\af31505\loch\f31506             flash('Please enter a team name.', 'danger')
\par \hich\af31506\dbch\af31505\loch\f31506             return redirect(url_for('quick_upload'))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Create and save the new team
\par \hich\af31506\dbch\af31505\loch\f31506         new_team = Team(teamName=team_name)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.add(new_team)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()  # Commit to get the team ID
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Loop through the 10 possible player entries
\par \hich\af31506\dbch\af31505\loch\f31506         for i in range(10):
\par \hich\af31506\dbch\af31505\loch\f31506             first_name = request.form.get(f'firstName\{i\}')
\par \hich\af31506\dbch\af31505\loch\f31506             last_name = request.form.get(f'lastName\{i\}')
\par \hich\af31506\dbch\af31505\loch\f31506             jersey_number = request.form.get(f'jerseyNumber\{i\}')
\par 
\par \hich\af31506\dbch\af31505\loch\f31506             if first_name and last_name and jersey_number:
\par \hich\af31506\dbch\af31505\loch\f31506                 # Create and save the player
\par \hich\af31506\dbch\af31505\loch\f31506                 new_player = Player(
\par \hich\af31506\dbch\af31505\loch\f31506                     firstName=first_name,
\par \hich\af31506\dbch\af31505\loch\f31506                     lastName=last_name,
\par \hich\af31506\dbch\af31505\loch\f31506                     jerseyNumber=int(jersey_number),
\par \hich\af31506\dbch\af31505\loch\f31506                     teamID=new_team.teamID
\par \hich\af31506\dbch\af31505\loch\f31506                 )
\par \hich\af31506\dbch\af31505\loch\f31506                 db.session.add(new_player)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Commit all the players to the database
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         flash(f'Team \{team_name\} and players uploaded successfully!', 'success')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('teams'))  # Replace with the appropriate redirect
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('quick_upload.html', form=form)  # Pass the form to the template
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/create_game', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 def create_game():
\par \hich\af31506\dbch\af31505\loch\f31506     form = CreateGameForm()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the current league and the latest season
\par \hich\af31506\dbch\af31505\loch\f31506     current_league_id = session.get('selected_league_id')
\par \hich\af31506\dbch\af31505\loch\f31506     current_league = League.query.get_or_404(current_league_id)
\par \hich\af31506\dbch\af31505\loch\f31506     seasons = Season.query.filter_by(league_id=current_league_id).order_by(Season.start_date.desc()).all()
\par \hich\af31506\dbch\af31505\loch\f31506     latest_season_id = seasons[0].id if seasons else None
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Populate league and season choices in the form
\par \hich\af31506\dbch\af31505\loch\f31506     form.league.choices = [(current_league.id, current_league.name)]
\par \hich\af31506\dbch\af31505\loch\f31506     form.season.choices = [(season.id, season.name) for season in seasons]
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch teams for the selected league
\par \hich\af31506\dbch\af31505\loch\f31506     teams = Team.query.filter_by(league_id=current_league_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     form.team1.choices = [(team.teamID, team.teamName) for team in teams]
\par \hich\af31506\dbch\af31505\loch\f31506     form.team2.choices = [(team.teamID, team.teamName) for team in teams]
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Set default values for league and season
\par \hich\af31506\dbch\af31505\loch\f31506     form.league.default = current_league_id
\par \hich\af31506\dbch\af31505\loch\f31506     form.season.default = latest_season_id
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch scheduled games for the current league and season
\par \hich\af31506\dbch\af31505\loch\f31506     scheduled_games = Game.query.filter_by(scheduled_played='Scheduled', league_id=current_league_id, season_id=latest_season_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if form.validate_on_submit():
\par \hich\af31506\dbch\af31505\loch\f31506         # Check if a scheduled game is selected
\par \hich\af31506\dbch\af31505\loch\f31506         selected_game_id = request.form.get('scheduled_game')
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         if selected_game_id:
\par \hich\af31506\dbch\af31505\loch\f31506             # Update the selected scheduled game to "Ongoing"
\par \hich\af31506\dbch\af31505\loch\f31506             game = Game.query.get_or_404(int(selected_game_id))
\par \hich\af31506\dbch\af31505\loch\f31506             game.scheduled_played = 'Ongoing'
\par \hich\af31506\dbch\af31505\loch\f31506             game.game_date = form.gameDate.data  # Update game date if needed
\par \hich\af31506\dbch\af31505\loch\f31506         else:
\par \hich\af31506\dbch\af31505\loch\f31506             # Create a new game manually
\par \hich\af31506\dbch\af31505\loch\f31506             game = Game(
\par \hich\af31506\dbch\af31505\loch\f31506                 game_date=form.gameDate.data,
\par \hich\af31506\dbch\af31505\loch\f31506                 team_1_id=form.team1.data,
\par \hich\af31506\dbch\af31505\loch\f31506                 team_2_id=form.team2.data,
\par \hich\af31506\dbch\af31505\loch\f31506                 league_id=current_league_id,
\par \hich\af31506\dbch\af31505\loch\f31506                 season_id=form.season.data,
\par \hich\af31506\dbch\af31505\loch\f31506                 scheduled_played='Ongoing'  # Mark the game as ongoing
\par \hich\af31506\dbch\af31505\loch\f31506             )
\par \hich\af31506\dbch\af31505\loch\f31506             db.session.add(game)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par \hich\af31506\dbch\af31505\loch\f31506         flash('Game started successfully!', 'success')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('game_actions', game_id=game.game_id))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Set default date to today's date
\par \hich\af31506\dbch\af31505\loch\f31506     if request.method == 'GET':
\par \hich\af31506\dbch\af31505\loch\f31506         form.gameDate.data = date.today()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('create_game.html', form=form, scheduled_games=scheduled_games)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/schedule_game', methods=['GET', 'POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def schedule_game():
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the current league and the latest season
\par \hich\af31506\dbch\af31505\loch\f31506     current_league_id = session.get('selected_league_id')
\par \hich\af31506\dbch\af31505\loch\f31506     current_league = League.query.get_or_404(current_league_id)
\par \hich\af31506\dbch\af31505\loch\f31506     seasons = Season.query.filter_by(league_id=current_league_id).order_by(Season.start_date.desc()).all()
\par \hich\af31506\dbch\af31505\loch\f31506     latest_season_id = seasons[0].id if seasons else None
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     if request.method == 'POST':
\par \hich\af31506\dbch\af31505\loch\f31506         team1_id = request.form['team1']
\par \hich\af31506\dbch\af31505\loch\f31506         team2_id = request.form['team2']
\par \hich\af31506\dbch\af31505\loch\f31506         game_date = request.form['game_date']
\par \hich\af31506\dbch\af31505\loch\f31506         selected_season_id = request.form['season']
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Create a new Game instance with 'Scheduled' status
\par \hich\af31506\dbch\af31505\loch\f31506         new_game = Game(
\par \hich\af31506\dbch\af31505\loch\f31506             game_date=game_date,
\par \hich\af31506\dbch\af31505\loch\f31506             team_1_id=team1_id,
\par \hich\af31506\dbch\af31505\loch\f31506             team_2_id=team2_id,
\par \hich\af31506\dbch\af31505\loch\f31506             league_id=current_league_id,
\par \hich\af31506\dbch\af31505\loch\f31506             season_id=selected_season_id,
\par \hich\af31506\dbch\af31505\loch\f31506             scheduled_played='Scheduled'  # Defaulting to 'Scheduled' when creating a new game
\par \hich\af31506\dbch\af31505\loch\f31506         )
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Add the new game to the database and commit
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.add(new_game)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Flash a success message and redirect to a summary or another page
\par \hich\af31506\dbch\af31505\loch\f31506         flash('Game successfully scheduled!', 'success')
\par \hich\af31506\dbch\af31505\loch\f31506         return redirect(url_for('game_summary', game_id=new_game.game_id))
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Get all teams for the current league to populate the dropdowns in the form
\par \hich\af31506\dbch\af31505\loch\f31506     teams = Team.query.filter_by(league_id=current_league_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template(
\par \hich\af31506\dbch\af31505\loch\f31506         'schedule_game.html',
\par \hich\af31506\dbch\af31505\loch\f31506         teams=teams,
\par \hich\af31506\dbch\af31505\loch\f31506         current_league=current_league,
\par \hich\af31506\dbch\af31505\loch\f31506         seasons=seasons,
\par \hich\af31506\dbch\af31505\loch\f31506         latest_season_id=latest_season_id
\par \hich\af31506\dbch\af31505\loch\f31506     )
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/view_games')
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def view_games():
\par \hich\af31506\dbch\af31505\loch\f31506     scheduled_games = Game.query.filter_by(scheduled_played='Scheduled').all()
\par \hich\af31506\dbch\af31505\loch\f31506     ongoing_games = Game.query.filter_by(scheduled_played='Ongoing').all()
\par \hich\af31506\dbch\af31505\loch\f31506     completed_games = Game.query.filter_by(scheduled_played='Played').all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('view_games.html',
\par \hich\af31506\dbch\af31505\loch\f31506                            scheduled_games=scheduled_games,
\par \hich\af31506\dbch\af31505\loch\f31506                            ongoing_games=ongoing_games,
\par \hich\af31506\dbch\af31505\loch\f31506                            completed_games=completed_games)
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/game_details/<int:game_id>', methods=['GET'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def game_details(game_id):
\par \hich\af31506\dbch\af31505\loch\f31506     game = Game.query.get_or_404(game_id)
\par \hich\af31506\dbch\af31505\loch\f31506     team1_players = Player.query.filter_by(teamID=game.team_1_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team2_players = Player.query.filter_by(teamID=game.team_2_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the last 10 entries from the gamelog table
\par \hich\af31506\dbch\af31505\loch\f31506     last_entries = GameLog.query.filter_by(gameid=game_id).order_by(GameLog.gamelogdatetime.desc()).limit(100).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch box scores for each team
\par \hich\af31506\dbch\af31505\loch\f31506     team1_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_1_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team2_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_2_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template(
\par \hich\af31506\dbch\af31505\loch\f31506         'game_details.html',
\par \hich\af31506\dbch\af31505\loch\f31506         game=game,
\par \hich\af31506\dbch\af31505\loch\f31506         team1_players=team1_players,
\par \hich\af31506\dbch\af31505\loch\f31506         team2_players=team2_players,
\par \hich\af31506\dbch\af31505\loch\f31506         last_entries=last_entries,
\par \hich\af31506\dbch\af31505\loch\f31506         team1_box_scores=team1_box_scores,
\par \hich\af31506\dbch\af31505\loch\f31506         team2_box_scores=team2_box_scores
\par \hich\af31506\dbch\af31505\loch\f31506     )
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 # Route for the game actions and timer
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/game_actions/<int:game_id>', methods=['GET'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def game_actions(game_id):
\par \hich\af31506\dbch\af31505\loch\f31506     game = Game.query.get_or_404(game_id)
\par \hich\af31506\dbch\af31505\loch\f31506     team1_players = Player.query.filter_by(teamID=game.team_1_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team2_players = Player.query.filter_by(teamID=game.team_2_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch team 1 box score and total points
\par \hich\af31506\dbch\af31505\loch\f31506     team1_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_1_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team1_total_points = sum([box.points for box in team1_box_scores])
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch team 2 box score and total points
\par \hich\af31506\dbch\af31505\loch\f31506     team2_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_2_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team2_total_points = sum([box.points for box in team2_box_scores])
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('game_actions.html',
\par \hich\af31506\dbch\af31505\loch\f31506                            game=game,
\par \hich\af31506\dbch\af31505\loch\f31506                            team1_players=team1_players,
\par \hich\af31506\dbch\af31505\loch\f31506                            team2_players=team2_players,
\par \hich\af31506\dbch\af31505\loch\f31506                            team1_box_scores=team1_box_scores,
\par \hich\af31506\dbch\af31505\loch\f31506                            team2_box_scores=team2_box_scores,
\par \hich\af31506\dbch\af31505\loch\f31506                            team1_total_points=team1_total_points,
\par \hich\af31506\dbch\af31505\loch\f31506                            team2_total_points=team2_total_points)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/refresh_box_scores/<int:game_id>', methods=['GET'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def refresh_box_scores(game_id):
\par \hich\af31506\dbch\af31505\loch\f31506     game = Game.query.get_or_404(game_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch team 1 box score and total points
\par \hich\af31506\dbch\af31505\loch\f31506     team1_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_1_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team1_total_points = sum([box.points for box in team1_box_scores])
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch team 2 box score and total points
\par \hich\af31506\dbch\af31505\loch\f31506     team2_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_2_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team2_total_points = sum([box.points for box in team2_box_scores])
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Render the box scores to HTML strings
\par \hich\af31506\dbch\af31505\loch\f31506     team1_html = render_template('partials/team_box_score.html', box_scores=team1_box_scores, total_points=team1_total_points)
\par \hich\af31506\dbch\af31505\loch\f31506     team2_html = render_template('partials/team_box_score.html', box_scores=team2_box_scores, total_points=team2_total_points)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return jsonify(\{
\par \hich\af31506\dbch\af31505\loch\f31506         'team1_html': team1_html,
\par \hich\af31506\dbch\af31505\loch\f31506         'team2_html': team2_html,
\par \hich\af31506\dbch\af31505\loch\f31506         'team1_total_points': team1_total_points,
\par \hich\af31506\dbch\af31505\loch\f31506         'team2_total_points': team2_total_points
\par \hich\af31506\dbch\af31505\loch\f31506     \})
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/game_summary/<int:game_id>', methods=['GET'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def game_summary(game_id):
\par \hich\af31506\dbch\af31505\loch\f31506     game = Game.query.get_or_404(game_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the box scores for both teams
\par \hich\af31506\dbch\af31505\loch\f31506     team1_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_1_id).all()
\par \hich\af31506\dbch\af31505\loch\f31506     team2_box_scores = BoxScore.query.filter_by(game_id=game_id, team_id=game.team_2_id).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate total points for each team
\par \hich\af31506\dbch\af31505\loch\f31506     team1_total_points = sum(box.points for box in team1_box_scores)
\par \hich\af31506\dbch\af31505\loch\f31506     team2_total_points = sum(box.points for box in team2_box_scores)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     def calculate_percentage(made, attempted):
\par \hich\af31506\dbch\af31505\loch\f31506         if attempted > 0:
\par \hich\af31506\dbch\af31505\loch\f31506             return round((made / attempted) * 100, 1)
\par \hich\af31506\dbch\af31505\loch\f31506         return 0.0
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate totals and percentages for Team 1
\par \hich\af31506\dbch\af31505\loch\f31506     team1_totals = \{
\par \hich\af31506\dbch\af31505\loch\f31506         'fga': sum(box.fga for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'fgm': sum(box.fgm for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'three_fga': sum(box.three_fga for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'three_fgm': sum(box.three_fgm for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'fta': sum(box.fta for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'ftm': sum(box.ftm for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'oreb': sum(box.oreb for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'dreb': sum(box.dreb for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'reb': sum(box.oreb + box.dreb for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'ast': sum(box.assists for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'stl': sum(box.steals for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'blk': sum(box.blocks for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'to': sum(box.turnovers for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'pf': sum(box.fouls for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'pts': sum(box.points for box in team1_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'fg_percent': calculate_percentage(sum(box.fgm for box in team1_box_scores), sum(box.fga for box in team1_box_scores)),
\par \hich\af31506\dbch\af31505\loch\f31506         'three_fg_percent': calculate_percentage(sum(box.three_fgm for box in team1_box_scores), sum(box.three_fga for box in team1_box_scores)),
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate totals and percentages for Team 2
\par \hich\af31506\dbch\af31505\loch\f31506     team2_totals = \{
\par \hich\af31506\dbch\af31505\loch\f31506         'fga': sum(box.fga for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'fgm': sum(box.fgm for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'three_fga': sum(box.three_fga for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'three_fgm': sum(box.three_fgm for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'fta': sum(box.fta for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'ftm': sum(box.ftm for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'oreb': sum(box.oreb for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'dreb': sum(box.dreb for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'reb': sum(box.oreb + box.dreb for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'ast': sum(box.assists for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'stl': sum(box.steals for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'blk': sum(box.blocks for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'to': sum(box.turnovers for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'pf': sum(box.fouls for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'pts': sum(box.points for box in team2_box_scores),
\par \hich\af31506\dbch\af31505\loch\f31506         'fg_percent': calculate_percentage(sum(box.fgm for box in team2_box_scores), sum(box.fga for box in team2_box_scores)),
\par \hich\af31506\dbch\af31505\loch\f31506         'three_fg_percent': calculate_percentage(sum(box.three_fgm for box in team2_box_scores), sum(box.three_fga for box in team2_box_scores)),
\par \hich\af31506\dbch\af31505\loch\f31506     \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate percentages for individual players
\par \hich\af31506\dbch\af31505\loch\f31506     for box in team1_box_scores + team2_box_scores:
\par \hich\af31506\dbch\af31505\loch\f31506         box.fg_percent = calculate_percentage(box.fgm, box.fga)
\par \hich\af31506\dbch\af31505\loch\f31506         box.three_fg_percent = calculate_percentage(box.three_fgm, box.three_fga)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the last 10 entries from the game log table
\par \hich\af31506\dbch\af31505\loch\f31506     last_entries = GameLog.query.filter_by(gameid=game_id).order_by(GameLog.gamelogdatetime.desc()).limit(100).all()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return render_template('game_summary.html', game=game,
\par \hich\af31506\dbch\af31505\loch\f31506                            team1_box_scores=team1_box_scores,
\par \hich\af31506\dbch\af31505\loch\f31506                            team2_box_scores=team2_box_scores,
\par \hich\af31506\dbch\af31505\loch\f31506                            last_entries=last_entries,
\par \hich\af31506\dbch\af31505\loch\f31506                            team1_total_points=team1_total_points,
\par \hich\af31506\dbch\af31505\loch\f31506                            team2_total_points=team2_total_points,
\par \hich\af31506\dbch\af31505\loch\f31506                            team1_totals=team1_totals,
\par \hich\af31506\dbch\af31505\loch\f31506                            team2_totals=team2_totals)
\par 
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/log_action', methods=['POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def log_action():
\par \hich\af31506\dbch\af31505\loch\f31506     data = request.get_json()
\par \hich\af31506\dbch\af31505\loch\f31506     try:
\par \hich\af31506\dbch\af31505\loch\f31506         log_entry = GameLog(
\par \hich\af31506\dbch\af31505\loch\f31506             gameid=data['gameid'],
\par \hich\af31506\dbch\af31505\loch\f31506             teamid=data['teamid'],
\par \hich\af31506\dbch\af31505\loch\f31506             playerid=data['playerid'],
\par \hich\af31506\dbch\af31505\loch\f31506             actiontype=data['actiontype'],
\par \hich\af31506\dbch\af31505\loch\f31506             action=data['action'],
\par \hich\af31506\dbch\af31505\loch\f31506             actiondesc=data['actiondesc'],
\par \hich\af31506\dbch\af31505\loch\f31506             currenttimer=data['currenttimer'],
\par \hich\af31506\dbch\af31505\loch\f31506             gamelogdatetime=datetime.now()
\par \hich\af31506\dbch\af31505\loch\f31506         )
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.add(log_entry)
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par \hich\af31506\dbch\af31505\loch\f31506         return jsonify(\{'status': 'success'\})
\par \hich\af31506\dbch\af31505\loch\f31506     except Exception as e:
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.rollback()
\par \hich\af31506\dbch\af31505\loch\f31506         return jsonify(\{'status': 'error', 'message': str(e)\})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/update_boxscore', methods=['POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def update_boxscore():
\par \hich\af31506\dbch\af31505\loch\f31506     try:
\par \hich\af31506\dbch\af31505\loch\f31506         # Fetch current league from session
\par \hich\af31506\dbch\af31505\loch\f31506         current_league_id = session.get('selected_league_id')
\par \hich\af31506\dbch\af31505\loch\f31506         if not current_league_id:
\par \hich\af31506\dbch\af31505\loch\f31506             return jsonify(\{'status': 'error', 'message': 'League not found in session.'\}), 400
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Fetch the latest season for the current league
\par \hich\af31506\dbch\af31505\loch\f31506         latest_season = Season.query.filter_by(league_id=current_league_id).order_by(Season.start_date.desc()).first()
\par \hich\af31506\dbch\af31505\loch\f31506         if not latest_season:
\par \hich\af31506\dbch\af31505\loch\f31506             return jsonify(\{'status': 'error', 'message': 'No season found for the current league.'\}), 400
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Parse JSON data
\par \hich\af31506\dbch\af31505\loch\f31506         data = request.get_json()
\par \hich\af31506\dbch\af31505\loch\f31506         if not data:
\par \hich\af31506\dbch\af31505\loch\f31506             return jsonify(\{'status': 'error', 'message': 'Invalid or missing JSON data.'\}), 400
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         game_id = data.get('game_id')
\par \hich\af31506\dbch\af31505\loch\f31506         team_id = data.get('team_id')
\par \hich\af31506\dbch\af31505\loch\f31506         player_id = data.get('player_id')
\par \hich\af31506\dbch\af31505\loch\f31506         action = data.get('action')
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Validate required fields
\par \hich\af31506\dbch\af31505\loch\f31506         if not all([game_id, team_id, player_id, action]):
\par \hich\af31506\dbch\af31505\loch\f31506             return jsonify(\{'status': 'error', 'message': 'Missing required fields.'\}), 400
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Fetch the game to get the game date
\par \hich\af31506\dbch\af31505\loch\f31506         game = Game.query.get_or_404(game_id)
\par \hich\af31506\dbch\af31505\loch\f31506         game_date = game.game_date
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Fetch or create the BoxScore entry for the game, team, and player
\par \hich\af31506\dbch\af31505\loch\f31506         box_score = BoxScore.query.filter_by(game_id=game_id, team_id=team_id, player_id=player_id).first()
\par \hich\af31506\dbch\af31505\loch\f31506         if not box_score:
\par \hich\af31506\dbch\af31505\loch\f31506             box_score = BoxScore(
\par \hich\af31506\dbch\af31505\loch\f31506                 game_id=game_id,
\par \hich\af31506\dbch\af31505\loch\f31506                 team_id=team_id,
\par \hich\af31506\dbch\af31505\loch\f31506                 player_id=player_id,
\par \hich\af31506\dbch\af31505\loch\f31506                 league_id=current_league_id,
\par \hich\af31506\dbch\af31505\loch\f31506                 season_id=latest_season.id,
\par \hich\af31506\dbch\af31505\loch\f31506                 date_played=game_date,  # Set date_played from game date
\par \hich\af31506\dbch\af31505\loch\f31506                 fga=0, fgm=0, three_fga=0, three_fgm=0, fta=0, ftm=0,
\par \hich\af31506\dbch\af31505\loch\f31506                 oreb=0, dreb=0, assists=0, steals=0, blocks=0, turnovers=0, fouls=0, points=0
\par \hich\af31506\dbch\af31505\loch\f31506             )
\par \hich\af31506\dbch\af31505\loch\f31506             db.session.add(box_score)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Dictionary to map actions to their corresponding updates
\par \hich\af31506\dbch\af31505\loch\f31506         action_map = \{
\par \hich\af31506\dbch\af31505\loch\f31506             '2-Point Made': lambda bs: (setattr(bs, 'fga', (bs.fga or 0) + 1), setattr(bs, 'fgm', (bs.fgm or 0) + 1), setattr(bs, 'points', (bs.points or 0) + 2)),
\par \hich\af31506\dbch\af31505\loch\f31506             '2-Point Miss': lambda bs: setattr(bs, 'fga', (bs.fga or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506 
            '3-Point Made': lambda bs: (setattr(bs, 'fga', (bs.fga or 0) + 1), setattr(bs, 'fgm', (bs.fgm or 0) + 1), setattr(bs, 'three_fga', (bs.three_fga or 0) + 1), setattr(bs, 'three_fgm', (bs.three_fgm or 0) + 1), setattr(bs, 'points', (bs.points or
\hich\af31506\dbch\af31505\loch\f31506  0) + 3)),
\par \hich\af31506\dbch\af31505\loch\f31506             '3-Point Miss': lambda bs: (setattr(bs, 'fga', (bs.fga or 0) + 1), setattr(bs, 'three_fga', (bs.three_fga or 0) + 1)),
\par \hich\af31506\dbch\af31505\loch\f31506             'FT Made': lambda bs: (setattr(bs, 'fta', (bs.fta or 0) + 1), setattr(bs, 'ftm', (bs.ftm or 0) + 1), setattr(bs, 'points', (bs.points or 0) + 1)),
\par \hich\af31506\dbch\af31505\loch\f31506             'FT Miss': lambda bs: setattr(bs, 'fta', (bs.fta or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Offensive Rebound': lambda bs: setattr(bs, 'oreb', (bs.oreb or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Defensive Rebound': lambda bs: setattr(bs, 'dreb', (bs.dreb or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Assist': lambda bs: setattr(bs, 'assists', (bs.assists or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Steal': lambda bs: setattr(bs, 'steals', (bs.steals or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Block': lambda bs: setattr(bs, 'blocks', (bs.blocks or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Turnover': lambda bs: setattr(bs, 'turnovers', (bs.turnovers or 0) + 1),
\par \hich\af31506\dbch\af31505\loch\f31506             'Foul': lambda bs: setattr(bs, 'fouls', (bs.fouls or 0) + 1)
\par \hich\af31506\dbch\af31505\loch\f31506         \}
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Apply the action if it's in the action map
\par \hich\af31506\dbch\af31505\loch\f31506         if action in action_map:
\par \hich\af31506\dbch\af31505\loch\f31506             action_map[action](box_score)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         # Commit the changes to the database
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.commit()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506         return jsonify(\{'status': 'success', 'message': 'BoxScore updated successfully.'\})
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     except SQLAlchemyError as e:
\par \hich\af31506\dbch\af31505\loch\f31506         # Log the exception and return a server error response
\par \hich\af31506\dbch\af31505\loch\f31506         app.logger.error(f"SQLAlchemyError in update_boxscore: \{str(e)\}")
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.rollback()
\par \hich\af31506\dbch\af31505\loch\f31506         return jsonify(\{'status': 'error', 'message': 'An internal server error occurred.'\}), 500
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     except Exception as e:
\par \hich\af31506\dbch\af31505\loch\f31506         # Log the exception and return a server error response
\par \hich\af31506\dbch\af31505\loch\f31506         app.logger.error(f"Error in update_boxscore: \{str(e)\}")
\par \hich\af31506\dbch\af31505\loch\f31506         db.session.rollback()
\par \hich\af31506\dbch\af31505\loch\f31506         return jsonify(\{'status': 'error', 'message': 'An internal server error occurred.'\}), 500
\par 
\par 
\par \hich\af31506\dbch\af31505\loch\f31506 @app.route('/end_game', methods=['POST'])
\par \hich\af31506\dbch\af31505\loch\f31506 @login_required
\par \hich\af31506\dbch\af31505\loch\f31506 @league_required
\par \hich\af31506\dbch\af31505\loch\f31506 def end_game():
\par \hich\af31506\dbch\af31505\loch\f31506     game_id = request.json['game_id']
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Fetch the game
\par \hich\af31506\dbch\af31505\loch\f31506     game = Game.query.get_or_404(game_id)
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Update the game status
\par \hich\af31506\dbch\af31505\loch\f31506     game.scheduled_played = 'Played'
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Calculate the final scores
\par \hich\af31506\dbch\af31505\loch\f31506     team_1_score = db.session.query(db.func.sum(BoxScore.points)).filter_by(game_id=game_id, team_id=game.team_1_id).scalar() or 0
\par \hich\af31506\dbch\af31505\loch\f31506     team_2_score = db.session.query(db.func.sum(BoxScore.points)).filter_by(game_id=game_id, team_id=game.team_2_id).scalar() or 0
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     game.team_1_score = team_1_score
\par \hich\af31506\dbch\af31505\loch\f31506     game.team_2_score = team_2_score
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Determine the winning team
\par \hich\af31506\dbch\af31505\loch\f31506     if team_1_score > team_2_score:
\par \hich\af31506\dbch\af31505\loch\f31506         game.team_won = game.team_1_id
\par \hich\af31506\dbch\af31505\loch\f31506     elif team_2_score > team_1_score:
\par \hich\af31506\dbch\af31505\loch\f31506         game.team_won = game.team_2_id
\par \hich\af31506\dbch\af31505\loch\f31506     else:
\par \hich\af31506\dbch\af31505\loch\f31506         game.team_won = None  # Handle tie if applicable
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     # Commit the changes to the database
\par \hich\af31506\dbch\af31505\loch\f31506     db.session.commit()
\par 
\par \hich\af31506\dbch\af31505\loch\f31506     return jsonify(\{'status': 'success', 'message': 'Game ended and scores updated.'\})
\par }\pard \ltrpar\ql \li0\ri0\sa160\sl278\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af31507 \ltrch\fcs0 \insrsid8196752 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210094a9528694070000c7200000160000007468656d652f7468656d652f
7468656d65312e786d6cec595f8b1bc9117f0fe43b0cf32e6b66248da4c5f2a1bfdeb3776d63c90ef7d82bb566dadb333d4cb7762d8e83e07bca4b207077e421
0779cb430839c8418ebce4c3186c92cb874875cf68d42db5bc7f30c184dd7dd1b47e55fd9baaeaaa52f5fdcf5e27d4b9c039272cedb9fe3dcf75703a670b9246
3df7c56c52ebb80e17285d20ca52dc73d798bb9f3df8e52feea32311e3043b209ff223d4736321b2a37a9dcf6119f17b2cc3297cb7647982043ce6517d91a34b
d09bd07ae079613d4124759d1425a0f6e97249e6d8994995ee838df23185c75470b930a7f954aac68684c22ece7d89e06b3ea4b9738168cf857d16ec72865f0b
d7a1880bf8a2e77aeacfad3fb85f4747a51015076435b989fa2be54a81c579a0f6cca3b36a536f1c749a7ea55f01a8d8c78d3bf2bfd2a700683e87372db8e83a
fd56e8758212ab818a8f16ddddb6df30f19afec61e67bf1b0e82a6a15f810afdcd3dbc37e98e472d03af4005beb587ef7bc1a0db30f00a54e0c33d7c73dc6f07
6303af403125e9f93e3a6c773a6189ae204b468fadf06e187aed5109dfa2201aaae8925b2c592a0ec55a825eb17c020009a44890d411eb0c2fd11ca2b89f09c6
9d11e119456bd7c950ca382c7b81ef43e835bda0fa571647471869d2921730e17b4b928fc3e739c944cf7d045a5d0df2eea79fdebef9f1ed9bbfbffdfaebb76f
feea9c902816852a43ee18a5912ef7f39f7ef79fef7fedfcfb6f7ffcf99b6fed78aee3dfffe537effff1cf0fa987a3b635c5bbef7e78ffe30fef7effdb7ffdf9
1b8bf67e8ece74f88c24983b4ff0a5f39c25f082ca14267f7c96df4c621623a24bf4d388a314c95d2cfac72236d04fd688220b6e804d3bbecc21d5d8800f57af
0cc2d3385f0962d1f8384e0ce0296374c072ab151ecbbd3433cf566964df3c5fe9b8e7085dd8f61ea2d4f0f27895418e253695c3181b349f51940a14e1140b47
7ec7ce31b6bcdd178418763d25f39c71b614ce17c419206235c98c9c19d1b4153a2609f8656d2308fe366c73fad219306a7beb11be3091703610b5909f616a98
f1215a0994d854ce504275839f2011db484ed7f95cc78db9004f47983267bcc09cdb649ee6f0be9ad31f23c86e56b79fd27562227341ce6d3a4f10633a72c4ce
87314a321b764ad258c77ececf214491f38c091bfc949927443e831f507ad0dd2f0936dc7d75367801594ea7b40d10f9cd2ab7f8f2216646fc4ed77489b02dd5
f4f3c448b1fd9c58a363b08a8cd03ec198a24bb4c0d879f1b985c1806586cdb7a41fc590558eb12db01e213356e5738a39f44ab2b9d9cf9327841b213bc5113b
c0e774bd9378d6284d507e48f313f0ba6ef3f1590e87d142e1299d9febc027047a408817ab519e72d0a105f741adcf62641430f9ccedf1bace0dff5de78cc1b9
7c65d0b8c6b904197c631948ecbacc076d3343d4d8601b3033449c135bba0511c3fd5b11595c95d8ca2ab7340fedd60dd01d194d4f42d22b3aa0ff5de703fdc5
bb3f7c6f09c18fd3edd8151ba9ea867dcea15472bcd3dd1cc2edf63443962fc8a7dfd28cd02a7d86a18aece7abbb8ee6aea371ffef3b9a43e7f9ae8f39d46ddc
f5312ef417777d4c395af9387dccb67581ae468e178a318f1afa2407673e4b42e954ac293ee16aecc3e1d7cc62028b524ecd3b713503cc62f828cb1c6c60e0a2
1c29192767e25744c4d31865301bf25da924e2a5ea883b19e3303252cb56dd124f57c9295b14a34e355bf28acaca91d8ae7b2d183a15eb30a612053a6c978b92
9f9aa7025fc5365263d60d01297b1312da6626898685447bb37805093935fb382cba16161da97ee3aa3d5300b5ca2bf073db811fe93db7d594846046cee7d09a
2fa49f0a576fbcab9cf9313d7dc8984604c058b1781318ca579eee4aae075f4fbe5d116ad7f0b4414239a5082b9384b28c6af0780c3f82cbe894abd7a171535f
77b72e35e84953a8fd20beb734da9d0fb1b8adaf416e3737d054cf1434752e7b6ed86841c8cc51d673973032868f4906b1c3e52f2e4423b877998bbc38f0b7c9
2c59cec508f1b830b84a3a857b122270ee5092f45cf9fa951b68aa7288e2e60790103e59725d482b9f1a3970bae964bc5ce2b9d0ddaead484b178f90e18b5c61
fd5689df1e2c25d90adc3d8d1797ce195de5cf118458abed4b032e08879b03bfb0e682c0555895c8b6f1b75398cae4afdf45a9182ad611cd625456143d991770
554f2a3aeaa9b281f654be33185433495908cf22596075a31ad5b42a5d05878355f76a2169392d696e6ba6915564d5b4673163874d19d8b1e5ed8abcc66a6362
c8697a852f52f76ecaed6e72dd4e9f505509307865bfdb957e8dda7633839a64bc9f8665ce2e57cddab179c12ba85da74868593fdca8ddb15b5523acdbc1e2ad
2a3fc8ed462d2c2d377da5b2b4ba33d7afb5d9d92b481e23e872575470e54a98ebe608bab2a9ea498ab40147e4b5288f067c725639e9b95f7aad7e7318b48635
afd31ad79a8da657ebb4fa8d5abfd56af8e396ef8d06c1575058449cf8ade2be7e02d717745ddedaabf5bd9bfb647343736fce923a5337f375455cdddcfbc1e1
9b7b8740d2f93218fbcda01f0c6bc3911fd69ac128ac75da8d7e6d1884a3a00f293d9cf4bf729d0b05f607a3d164d20a6ae110704dafdfaaf5078d612dec8c07
c1c41f37471e80cbccf91afa6fb0e9c616f051f17af05f000000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d
652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d
363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d26245228
2e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9
850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c0200001300000000000000000000
000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b000000000000000000
00000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c00000000000000000000000000190200
007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210094a9528694070000c720000016000000000000
00000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b010000270000
00000000000000000000009e0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000990b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax376\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Table;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Contemporary;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Elegant;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Professional;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Theme;\lsdsemihidden1 \lsdlocked0 Placeholder Text;
\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;
\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;
\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdpriority61 \lsdlocked0 Light List Accent 1;
\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdsemihidden1 \lsdlocked0 Revision;
\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;
\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdpriority72 \lsdlocked0 Colorful List Accent 1;
\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;
\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;
\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;
\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;
\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;
\lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hashtag;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Unresolved Mention;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Link;}}{\*\datastore 01050000
02000000180000004d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e5000000000000000000000000e0d3
be16b804db01feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}